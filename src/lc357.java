/**
 * @author qhhu
 * @date 2019/12/14 - 9:05
 *
 * [357] 计算各个位数不同的数字个数
 *
 * 题目: 给定一个非负整数n, 返回各位数字都不同的数字x的个数, 其中0 <= x < 10 ^ n
 *
 * 难度: medium
 *
 * 思路: f(0) = 1
 *      f(1) = 10, 分别为[0, 9], (只有一位的情况下最高位可以有0, 即其为特殊情况)
 *      f(2) = 9 * 9, 第一个数字在[1, 9]中选择一个, 第二个数字还有9种选择
 *      f(3) = f(2) * 8, 同上, 第三个数字还有8种选择
 *      f(4) = f(3) * 7, 同上, 第四个数字还有7种选择
 *      ...
 *      f(10) = f(9) * 1, 同上, 第十个数字只有一种选择
 *      f(11) = f(10) * 0, 第11个数字一定重复
 *      ...
 */
class Solution {
    /**
     * 时间复杂度: O(1)
     * 空间复杂度: O(1)
     */
    public int countNumbersWithUniqueDigits(int n) {
        if (n == 0) return 1;

        int ans = 10, base = 9;
        for (int i = 2; i <= n && i<= 10; i++) {
            base *= 11 - i; // f(i) = f(i - 1) * (11 - i), 11 - i只是根据i递增凑后面的乘数
            ans += base;
        }

        return ans;
    }
}
